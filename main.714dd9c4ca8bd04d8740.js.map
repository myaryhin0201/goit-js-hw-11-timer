{"version":3,"sources":["webpack:///./js/main.js","webpack:///./templates/timer.hbs"],"names":["buttonRefs","start","document","querySelector","stop","reset","setAttribute","timer","selector","targetDate","this","root","markup","itemsTemplate","insertAdjacentHTML","refs","days","hours","mins","secs","ms","removeAttribute","timerIsActive","intervalId","setInterval","currentTime","Date","now","deltaTime","updateClock","clearInterval","textContent","time","pad","Math","floor","value","n","String","padStart","addEventListener","bind","Handlebars","module","exports","template","container","depth0","helpers","partials","data"],"mappings":"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","file":"main.714dd9c4ca8bd04d8740.js","sourcesContent":["import itemsTemplate from '../templates/timer.hbs';\r\nconst buttonRefs = {\r\n  start: document.querySelector(`[data-action=\"start\"]`),\r\n  stop: document.querySelector(`[data-action=\"stop\"]`),\r\n  reset: document.querySelector(`[data-action=\"reset\"]`),\r\n}\r\nbuttonRefs.stop.setAttribute('disabled', true);\r\nbuttonRefs.reset.setAttribute('disabled', true);\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.targetDate = targetDate;\r\n    this.selector = selector;\r\n    this.root = document.querySelector(this.selector);\r\n    this.markup = itemsTemplate();\r\n    this.root.insertAdjacentHTML(`beforeend`,  this.markup);\r\n    this.refs = {\r\n    days: this.root.querySelector('[data-value=\"days\"]'),\r\n    hours: this.root.querySelector('[data-value=\"hours\"]'),\r\n    mins: this.root.querySelector('[data-value=\"mins\"]'),\r\n    secs: this.root.querySelector('[data-value=\"secs\"]'),\r\n    ms: this.root.querySelector('[data-value=\"ms\"]'),\r\n    }\r\n  }\r\n    intervalId = null;\r\n    timerIsActive = false;\r\n  start() {\r\n    buttonRefs.start.setAttribute('disabled',true);\r\n    buttonRefs.stop.removeAttribute('disabled');\r\n    buttonRefs.reset.removeAttribute('disabled');\r\n    if (this.timerIsActive) {\r\n      return;\r\n      };\r\n      this.timerIsActive = true;\r\n      this.intervalId = setInterval(() => {\r\n         const currentTime = Date.now();\r\n         const deltaTime = this.targetDate - currentTime;\r\n         if (deltaTime <= 0) {\r\n           this.updateClock(0);\r\n           return;\r\n         }\r\n            this.updateClock(deltaTime);\r\n        }, 10)\r\n  }\r\n  stop() {\r\n    buttonRefs.start.removeAttribute('disabled');\r\n    buttonRefs.stop.setAttribute('disabled', true);\r\n    buttonRefs.reset.removeAttribute('disabled');\r\n    clearInterval(this.intervalId);\r\n    this.timerIsActive = false;\r\n  }\r\n  reset() {\r\n    buttonRefs.start.removeAttribute('disabled');\r\n    buttonRefs.stop.setAttribute('disabled', true);\r\n    buttonRefs.reset.setAttribute('disabled', true);\r\n    clearInterval(this.intervalId);\r\n    this.timerIsActive = false;\r\n    this.refs.days.textContent = \"000\";\r\n    this.refs.hours.textContent = \"00\";\r\n    this.refs.mins.textContent = \"00\";\r\n    this.refs.secs.textContent = \"00\";\r\n    this.refs.ms.textContent = \"000\";\r\n  }\r\n    updateClock(time) {\r\n      const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)),3);\r\n      const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),2);\r\n      const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)),2);\r\n      const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000),2);\r\n      const ms = this.pad(Math.floor((time % (1000 * 60)%1000)),3);\r\n      this.refs.days.textContent = days;\r\n      this.refs.hours.textContent = hours;\r\n      this.refs.mins.textContent = mins;\r\n      this.refs.secs.textContent = secs;\r\n      this.refs.ms.textContent = ms;\r\n    }\r\n    pad(value,n) {\r\n        return String(value).padStart(n, '0')\r\n  }\r\n};\r\nconst timer = new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date('Jan 01, 2022'),\r\n});\r\nbuttonRefs.start.addEventListener('click', timer.start.bind(timer));\r\nbuttonRefs.stop.addEventListener('click', timer.stop.bind(timer));\r\nbuttonRefs.reset.addEventListener('click', timer.reset.bind(timer));\r\n","var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"flex\\\">\\r\\n    <div class=\\\"field\\\">\\r\\n        <span class=\\\"value time\\\" data-value=\\\"days\\\">000</span>\\r\\n        <span class=\\\"label text\\\">Days</span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"field\\\">\\r\\n        <span class=\\\"value time\\\" data-value=\\\"hours\\\">00</span>\\r\\n        <span class=\\\"label text\\\">Hours</span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"field\\\">\\r\\n        <span class=\\\"value time\\\" data-value=\\\"mins\\\">00</span>\\r\\n        <span class=\\\"label text\\\">Min</span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"field\\\">\\r\\n        <span class=\\\"value time\\\" data-value=\\\"secs\\\">00</span>\\r\\n        <span class=\\\"label text\\\">Sec</span>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n        <span class=\\\"value time\\\" data-value=\\\"ms\\\">000</span>\\r\\n        <span class=\\\"label text\\\">MS</span>\\r\\n    </div>\\r\\n</div>\";\n},\"useData\":true});"],"sourceRoot":""}